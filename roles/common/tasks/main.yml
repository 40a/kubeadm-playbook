---
- name: Create kubernetes yum repository
  yum_repository:
    name: kubernetes
    description: Kubernetes
    baseurl: http://yum.kubernetes.io/repos/kubernetes-el7-x86_64
    gpgcheck: 0

- name: Disable selinux
  selinux: policy=targeted state=permissive

- name: Clean yum metadata
  command: yum clean all
  args:
    warn: no

- name: Install packages
  yum: name={{ item }} state={{ package_state | default ('latest') }}
  with_items:
  - docker
  - kubelet
  - kubeadm
  - kubectl
  - kubernetes-cni
  

- name: Use json-file docker logging driver
  lineinfile:
    dest: /etc/sysconfig/docker
    regexp: '^OPTIONS='
    line: "OPTIONS='--selinux-enabled --log-driver=json-file --signature-verification=false'"
  notify:
  - Restart docker
  tags: 
  - docker

- name: Allow insecure registry
  lineinfile:
    dest: /etc/sysconfig/docker
    regexp: '^# INSECURE_REGISTRY='
    line: "INSECURE_REGISTRY='--insecure-registry {{ kubeadm_docker_insecure_registry }}'"
  when:
    kubeadm_docker_insecure_registry is defined
  notify:
  - Restart docker
  tags: 
  - docker

- name: Use overlay docker storage driver
  lineinfile:
    dest: /etc/sysconfig/docker-storage
    regexp: '^DOCKER_STORAGE_OPTIONS='
    line: 'DOCKER_STORAGE_OPTIONS="--storage-driver=overlay"'
  notify:
  - Restart docker
  tags: 
  - docker

- name: Remove existing kubelet args from drop-in unit
  lineinfile:
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '^Environment="KUBELET_EXTRA_ARGS'
    state: absent
  tags: 
  - kubelet

- name: Use systemd kubelet cgroup driver
  lineinfile:
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    insertafter: '^Environment=\"KUBELET_AUTHZ_ARGS'
    line: 'Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=systemd"'
  notify:
  - Reload systemd
  - Restart kubelet
  tags: 
  - kubelet

- name: Create kubeadm sysctl file
  copy: src=90-kubeadm.conf dest=/etc/sysctl.d/90-kubeadm.conf
  tags: 
  - kubelet

- name: Set sysctl settings
  command: sysctl --system

- name: Reset any existing cluster
  command: /usr/bin/kubeadm reset

- name: Enable and start docker
  systemd: state=started enabled=yes name=docker

- name: Enable and start kubelet
  systemd: state=started enabled=yes name=kubelet

- name: kubeadm completion preps
  file:
    path: ~/.kube/
    state: directory
    mode: 0755
    
- name: kubeadm completion shell
  command: kubeadm completion {{ shell | default ('bash') }} > ~/.kube/kubeadm_completion.bash.inc
  args:
    warn: no

- name: kubeadm completion shell
  command: printf "\n# Kubeadm shell completion\nsource '~/.kube/kubeadm_completion.bash.inc'\n" >> $HOME/.bash_profile
  when: shell is undefined or shell == 'bash'
  
- name: kubectl completion shell
  command: kubectl completion {{ shell | default ('bash') }} > ~/.kube/completion.bash.inc
  args:
    warn: no

- name: kubectl completion shell
  command: printf "\n# Kubectl shell completion\nsource '~/.kube/completion.bash.inc'\n" >> $HOME/.bash_profile
  when: shell is undefined or shell == 'bash'
